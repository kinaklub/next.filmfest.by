# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2017-03-13 21:41
from __future__ import unicode_literals

from django.db import migrations, models
import wagtail.wagtailcore.fields

from cpm_generic.migration_utils import get_content_type, add_subpage, remove_subpage


def add_partners_page(apps, schema_editor):
    HomePage = apps.get_model('home.HomePage')
    PartnersPage = apps.get_model('partners.PartnersPage')
    Season = apps.get_model('cpm_data.Season')

    partners_page_ct = get_content_type(apps, 'partners', 'partnerspage')

    homepage = HomePage.objects.get(slug='home')
    season = Season.objects.get(name_en='2017')

    #import pdb

    #pdb.set_trace()

    add_subpage(
        homepage,
        PartnersPage,
        content_type=partners_page_ct,
        title=u'CPM Partners',
        slug='partners',
        name_en=u'Partners',
        name_be=u'Партнёры',
        name_ru=u'Партнеры',
        entry_en=u'<i>Cinema Perpetuum Mobile</i> is a non-profit, independent project which keeps on expenses and aspirations of the organizers. At the same time international nature of the event, cultural resonance provides fertile ground for collaboration with business and public organizations.',
        entry_be=u'<i>Cinema Perpetuum Mobile</i> - некамерцыйны, незалежны праект, які трымаецца на імкненнях і сродках арганізатараў. У той жа час чакаемы культурны рэзананс падзеі, яе міжнародны характар, актыўныя зацікаўленнасці, ствараюць выдатную глебу для супрацоўніцтва з камерцыйнымі і грамадскімі ўстановамі.',
        entry_ru=u'<i>Cinema Perpetuum Mobile</i> - некоммерческий, независимый проект, который держится на устремлениях и расходах организаторов. В то же время международный характер события, его культурный резонанс, заинтересованности, создают благоприятную почву для сотрудничества с коммерческими и общественными организациями.',
        season=season
    )


def remove_partners_page(apps, schema_editor):
    HomePage = apps.get_model('home.HomePage')
    PartnersPage = apps.get_model('partners.PartnersPage')

    partners_page_ct = get_content_type(apps, 'partners', 'partnerspage')

    homepage = HomePage.objects.get(slug='home')
    remove_subpage(
        homepage,
        PartnersPage,
        content_type=partners_page_ct,
        slug='partners'
    )


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('home', '0002_create_homepage'),
        ('partners', '0001_initial'),
    ]


    operations = [
        migrations.RunPython(add_partners_page, remove_partners_page),
    ]
